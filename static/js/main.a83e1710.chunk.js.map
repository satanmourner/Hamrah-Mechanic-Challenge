{"version":3,"sources":["components/images/icon.svg","components/images/github.svg","components/Header.jsx","components/useContainer.jsx","components/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","src","icon","alt","width","height","points","fill","href","target","xlinkHref","github","x","y","arrObj","Container","useState","value","setValue","handleSubmit","arr","split","map","Number","arrWidth","i","push","j","index","id","console","log","handleInput","e","handleEnter","which","useContainer","className","type","placeholder","onChange","onKeyPress","onClick","element","style","flex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,G,kBAAA,IAA0B,kCCA1B,MAA0B,mCCK1B,SAASA,IACtB,OACE,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,SACpB,kDACA,sBAAKC,MAAM,KAAKC,OAAO,KAAvB,UACE,0BAAUC,OAAO,sBAAsBC,KAAK,UAC5C,mBAAGC,KAAK,4BAA4BC,OAAO,SAA3C,SACE,uBAAOC,UAAWC,EAAQP,MAAM,KAAKC,OAAO,KAAKO,EAAE,KAAKC,EAAE,c,iBCXhEC,EAAS,GCEE,SAASC,IAAa,IAAD,EDDrB,WAAyB,IAAD,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,KAK/BC,EAAe,WACnBL,EAAS,GAET,IAAIM,EAAMH,EAAMI,MAAM,KACtBD,EAAMA,EAAIE,KAAI,SAACL,GAAD,OAAWM,OAAON,MAEhC,IAAMO,EAAW,GACbC,EAAI,EACR,IAAKA,KAAKL,EACR,GAAe,IAAXA,EAAIK,GACND,EAASE,KAAK,aAGd,IADA,IAAMtB,EAAQ,IAAMgB,EAAIK,GAAK,IACpBE,EAAI,EAAGA,EAAIP,EAAIK,GAAIE,IAC1BH,EAASE,KAAKtB,GAKpBoB,EAASF,KAAI,SAACL,EAAOW,GAAR,OAAkBd,EAAOY,KAAK,CAAEG,KAAMD,EAAOxB,MAAOa,OACjEa,QAAQC,IAAIjB,GAEZI,EAAS,KAKX,MAAO,CACLJ,SACAG,QACAe,YAhCkB,SAACC,GAAD,OAAOf,EAASe,EAAExB,OAAOQ,QAiC3CE,eACAe,YAPkB,SAACD,GAAD,OAAoB,KAAZA,EAAEE,MAAehB,IAAiB,OCtB1DiB,GALFtB,EAFgC,EAEhCA,OACAG,EAHgC,EAGhCA,MACAe,EAJgC,EAIhCA,YACAb,EALgC,EAKhCA,aACAe,EANgC,EAMhCA,YAGF,OACE,sBAAKG,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,2DACA,uBACEC,KAAK,OACLC,YAAY,sBACZtB,MAAOA,EACPuB,SAAUR,EACVS,WAAYP,IAEd,wBAAQI,KAAK,SAASrB,MAAM,SAASyB,QAASvB,EAA9C,yBAIDL,EAAOQ,KAAI,SAACqB,GAAD,OACV,sBACEN,UAAU,iBAEVO,MAAO,CAAEC,KAAMF,EAAQvC,OAHzB,oBAKUuC,EAAQd,KALlB,gBAEgBc,EAAQd,WClBjBiB,MATf,WACE,OACE,sBAAKT,UAAU,gBAAf,UACE,cAACrC,EAAD,IACA,cAACe,EAAD,QCISgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a83e1710.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.8cc5f576.svg\";","export default __webpack_public_path__ + \"static/media/github.1018adb7.svg\";","import React from \"react\";\nimport \"./css/header.css\";\nimport icon from \"./images/icon.svg\";\nimport github from \"./images/github.svg\";\n\nexport default function Header() {\n  return (\n    <header>\n      <img src={icon} alt=\"icon\" />\n      <h1>Layout Generator</h1>\n      <svg width=\"65\" height=\"65\">\n        <polyline points=\"65, 0, 65, 65, 0, 0\" fill=\"white\"></polyline>\n        <a href=\"https://github.com/shah59\" target=\"_blank\">\n          <image xlinkHref={github} width=\"35\" height=\"35\" x=\"30\" y=\"5\" />\n        </a>\n      </svg>\n    </header>\n  );\n}\n","import { useState } from \"react\";\n\nvar arrObj = [];\nexport default function useContainer() {\n  const [value, setValue] = useState(\"\");\n\n  const handleInput = (e) => setValue(e.target.value);\n\n  const handleSubmit = () => {\n    arrObj = [];\n\n    let arr = value.split(\"/\");\n    arr = arr.map((value) => Number(value));\n\n    const arrWidth = [];\n    let i = 0;\n    for (i in arr) {\n      if (arr[i] === 1) {\n        arrWidth.push(\"100%\");\n      } else {\n        const width = 100 / arr[i] + \"%\";\n        for (let j = 0; j < arr[i]; j++) {\n          arrWidth.push(width);\n        }\n      }\n    }\n\n    arrWidth.map((value, index) => arrObj.push({ id: ++index, width: value }));\n    console.log(arrObj);\n\n    setValue(\"\");\n  };\n\n  const handleEnter = (e) => (e.which === 13 ? handleSubmit() : null);\n\n  return {\n    arrObj,\n    value,\n    handleInput,\n    handleSubmit,\n    handleEnter,\n  };\n}\n","import React from \"react\";\nimport \"./css/container.css\";\nimport useContainer from \"./useContainer\";\n\nexport default function Container() {\n  const {\n    arrObj,\n    value,\n    handleInput,\n    handleSubmit,\n    handleEnter,\n  } = useContainer();\n\n  return (\n    <div className=\"container\">\n      <div className=\"input-container\">\n        <span>input numbers (in Row):</span>\n        <input\n          type=\"text\"\n          placeholder='rows split with \"/\"'\n          value={value}\n          onChange={handleInput}\n          onKeyPress={handleEnter}\n        />\n        <button type=\"submit\" value=\"submit\" onClick={handleSubmit}>\n          generate\n        </button>\n      </div>\n      {arrObj.map((element) => (\n        <div\n          className=\"create-element\"\n          key={`field-${element.id}`}\n          style={{ flex: element.width }}\n        >\n          layout {element.id}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n//algorithm in 40 min\n//optimize 15 min\n//2hour :/ for design\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Header />\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}