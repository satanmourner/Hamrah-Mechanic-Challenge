[{"/home/sanaz/Front/hm/src/index.js":"1","/home/sanaz/Front/hm/src/App.js":"2","/home/sanaz/Front/hm/src/components/Container.jsx":"3","/home/sanaz/Front/hm/src/reportWebVitals.js":"4","/home/sanaz/Front/hm/src/components/useContainer.jsx":"5","/home/sanaz/Front/hm/src/components/Header.jsx":"6"},{"size":500,"mtime":1606429118201,"results":"7","hashOfConfig":"8"},{"size":251,"mtime":1606519732052,"results":"9","hashOfConfig":"8"},{"size":987,"mtime":1606520970147,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1606429118213,"results":"11","hashOfConfig":"8"},{"size":904,"mtime":1606521474895,"results":"12","hashOfConfig":"8"},{"size":541,"mtime":1606520261721,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"595len",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sanaz/Front/hm/src/index.js",[],["29","30"],"/home/sanaz/Front/hm/src/App.js",[],"/home/sanaz/Front/hm/src/components/Container.jsx",[],["31","32"],"/home/sanaz/Front/hm/src/reportWebVitals.js",[],"/home/sanaz/Front/hm/src/components/useContainer.jsx",["33"],"import { useState } from \"react\";\n\nvar arrObj = [];\nexport default function useContainer() {\n  const [value, setValue] = useState(\"\");\n\n  const handleInput = (e) => setValue(e.target.value);\n\n  const handleSubmit = () => {\n    arrObj = [];\n\n    let arr = value.split(\"/\");\n    arr = arr.map((value) => Number(value));\n\n    const arrWidth = [];\n    let i = 0;\n    for (i in arr) {\n      if (arr[i] === 1) {\n        arrWidth.push(\"100%\");\n      } else {\n        const width = 100 / arr[i] + \"%\";\n        for (let j = 0; j < arr[i]; j++) {\n          arrWidth.push(width);\n        }\n      }\n    }\n\n    arrWidth.map((value, index) => {\n      arrObj.push({ id: ++index, width: value });\n    });\n    console.log(arrObj);\n\n    setValue(\"\");\n  };\n\n  const handleEnter = (e) => (e.which === 13 ? handleSubmit() : null);\n\n  return {\n    arrObj,\n    value,\n    handleInput,\n    handleSubmit,\n    handleEnter,\n  };\n}\n","/home/sanaz/Front/hm/src/components/Header.jsx",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"36","replacedBy":"40"},{"ruleId":"38","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":28,"column":33,"nodeType":"44","messageId":"45","endLine":28,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":9,"column":7,"nodeType":"48","endLine":9,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":13,"column":45,"nodeType":"51","endLine":13,"endColumn":60},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]